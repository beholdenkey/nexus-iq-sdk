name: "CI - Pull Request"
concurrency: # Cancel any existing runs of this workflow for this same PR
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true
on:
  pull_request:
  workflow_call:

jobs:
  test:
    runs-on: "ubuntu-20.04"
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"

      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v2"
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Cache Poetry virtual environment"
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: "Linting: black"
        run: "poetry run invoke black"

      - name: "Linting: flake8"
        run: "poetry run invoke flake8"

      - name: "Testing: pytest and coverage"
        run: "poetry run pytest --cov=./ --cov-report xml"

      - name: Create Coverage
        if: ${{ github.event_name == 'pull_request' }}
        uses: orgoro/coverage@v3
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
